define({ "api": [  {    "name": "AddBot",    "group": "Users",    "permission": [      {        "name": "admin_manager",        "title": "Admin manager access rights needed.",        "description": "<p>Please use admin manager identity to request this uri.</p>"      }    ],    "type": "post",    "url": "/users/addbot",    "title": "Add bot",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "botName",            "description": "<p>bot name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "scopeID",            "description": "<p>scope id.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 \n{ \n     type: 'signupMessage',\n     message: 'Authentication succeeded',\n     keys: {\n         apiKey: String,\n         secretKey: String\n     } \n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT string, encode using Secret key : // secretKey you get by login. Shouldn’t contain 'Bearer ’ in string</p> <p>JWT payload should contain:</p> <ul> <li>jti : random text ( suggestion -&gt; encode with ‘hex’, length = 10 )</li> <li>iat : Time.now();</li> <li>epx : Time.now(); plus 3 days</li> </ul>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "ApiKey",            "description": "<p>You can get ApiKey by signup or login</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B001",            "description": "<p>status : 401, msg : JWT or ApiKey undefined - Missing authorization or apikey in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B002",            "description": "<p>status : 401, msg : User not Found - apikey is wrong</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B003",            "description": "<p>status : 401, msg : User has logout - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B004",            "description": "<p>status : 401, msg : User has Banned - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B005",            "description": "<p>status : 401, msg : JWT Invalid - Wrong encoding of authorization or User has logined on other device</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B006",            "description": "<p>status : 401, msg : JWT Payload Invalid - Missing jti or iat or exp in authorization's payload</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B007",            "description": "<p>status : 401, msg : JWT Expired - iat or exp is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B008",            "description": "<p>status : 401, msg : Not Authorized for this URI - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D001",            "description": "<p>status : 401, type : signupMessage, msg : Content not Complete - Missing phone or password in body</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D003",            "description": "<p>status : 401, type : signupMessage, msg : Role structure invalid</p>"          }        ]      }    }  },  {    "name": "CreateBotKey",    "group": "Users",    "permission": [      {        "name": "admin_manager",        "title": "Admin manager access rights needed.",        "description": "<p>Please use admin manager identity to request this uri.</p>"      }    ],    "type": "post",    "url": "/users/createBotKey",    "title": "Create new key pair for bot",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "bot",            "description": "<p>bot name.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 \n{ \n     type: 'signupMessage',\n     message: 'Authentication succeeded',\n     keys: {\n         apiKey: String,\n         secretKey: String\n     } \n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT string, encode using Secret key : // secretKey you get by login. Shouldn’t contain 'Bearer ’ in string</p> <p>JWT payload should contain:</p> <ul> <li>jti : random text ( suggestion -&gt; encode with ‘hex’, length = 10 )</li> <li>iat : Time.now();</li> <li>epx : Time.now(); plus 3 days</li> </ul>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "ApiKey",            "description": "<p>You can get ApiKey by signup or login</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B001",            "description": "<p>status : 401, msg : JWT or ApiKey undefined - Missing authorization or apikey in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B002",            "description": "<p>status : 401, msg : User not Found - apikey is wrong</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B003",            "description": "<p>status : 401, msg : User has logout - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B004",            "description": "<p>status : 401, msg : User has Banned - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B005",            "description": "<p>status : 401, msg : JWT Invalid - Wrong encoding of authorization or User has logined on other device</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B006",            "description": "<p>status : 401, msg : JWT Payload Invalid - Missing jti or iat or exp in authorization's payload</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B007",            "description": "<p>status : 401, msg : JWT Expired - iat or exp is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B008",            "description": "<p>status : 401, msg : Not Authorized for this URI - As msg says</p>"          }        ]      }    }  },  {    "name": "Data",    "group": "Users",    "type": "get",    "url": "/users/data",    "title": "Get user data",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "    HTTP/1.1 200 \n    {\n\t        usingAmount : 0,\n\t        data : [\n\t\t    {\n\t\t\t    container : String, // #001\n\t\t\t    time : Date\n\t\t\t    returned : Boolean\n\t\t\t    type : String // 12oz 玻璃杯\n\t\t\t    store : String // 正興咖啡館\n\t\t\t    returnTime : Date // If returned == true\n\t\t    }, ...\n\t        ],\n\t        globalAmount : Number\n     }",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT string, encode using Secret key : // secretKey you get by login. Shouldn’t contain 'Bearer ’ in string</p> <p>JWT payload should contain:</p> <ul> <li>jti : random text ( suggestion -&gt; encode with ‘hex’, length = 10 )</li> <li>iat : Time.now();</li> <li>epx : Time.now(); plus 3 days</li> </ul>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "ApiKey",            "description": "<p>You can get ApiKey by signup or login</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B001",            "description": "<p>status : 401, msg : JWT or ApiKey undefined - Missing authorization or apikey in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B002",            "description": "<p>status : 401, msg : User not Found - apikey is wrong</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B003",            "description": "<p>status : 401, msg : User has logout - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B004",            "description": "<p>status : 401, msg : User has Banned - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B005",            "description": "<p>status : 401, msg : JWT Invalid - Wrong encoding of authorization or User has logined on other device</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B006",            "description": "<p>status : 401, msg : JWT Payload Invalid - Missing jti or iat or exp in authorization's payload</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B007",            "description": "<p>status : 401, msg : JWT Expired - iat or exp is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B008",            "description": "<p>status : 401, msg : Not Authorized for this URI - As msg says</p>"          }        ]      }    }  },  {    "name": "DataByToken",    "group": "Users",    "type": "get",    "url": "/users/data/:token",    "title": "Get user data by token",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "    HTTP/1.1 200 \n    {\n\t        usingAmount : 0,\n\t        data : [\n\t\t    {\n\t\t\t    container : String, // #001\n\t\t\t    time : Date\n\t\t\t    returned : Boolean\n\t\t\t    type : String // 12oz 玻璃杯\n\t\t\t    store : String // 正興咖啡館\n\t\t\t    returnTime : Date // If returned == true\n\t\t    }, ...\n\t        ],\n\t        globalAmount : Number\n     }",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT string, encode using Secret key : // secretKey you get by login. Shouldn’t contain 'Bearer ’ in string</p> <p>JWT payload should contain:</p> <ul> <li>jti : random text ( suggestion -&gt; encode with ‘hex’, length = 10 )</li> <li>iat : Time.now();</li> <li>epx : Time.now(); plus 3 days</li> </ul>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "ApiKey",            "description": "<p>You can get ApiKey by signup or login</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B001",            "description": "<p>status : 401, msg : JWT or ApiKey undefined - Missing authorization or apikey in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B002",            "description": "<p>status : 401, msg : User not Found - apikey is wrong</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B003",            "description": "<p>status : 401, msg : User has logout - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B004",            "description": "<p>status : 401, msg : User has Banned - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B005",            "description": "<p>status : 401, msg : JWT Invalid - Wrong encoding of authorization or User has logined on other device</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B006",            "description": "<p>status : 401, msg : JWT Payload Invalid - Missing jti or iat or exp in authorization's payload</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B007",            "description": "<p>status : 401, msg : JWT Expired - iat or exp is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B008",            "description": "<p>status : 401, msg : Not Authorized for this URI - As msg says</p>"          }        ]      }    }  },  {    "name": "Forgot_Password",    "group": "Users",    "type": "post",    "url": "/users/forgotpassword",    "title": "Forgot password (step 1)",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>phone of the User.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 205 Need Verification Code\n{ \n     type: 'forgotPassMessage',\n     message: 'Send Again With Verification Code' \n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "reqID",            "description": "<p>random text ( suggestion -&gt; String that encode with ‘hex’, length = 10 )</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "reqTime",            "description": "<p>Time.now()</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "A001",            "description": "<p>status : 401, msg : Req Invalid - Missing hashID or reqTime in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "A002",            "description": "<p>status : 401, msg : Req Expired - reqTime is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D009",            "description": "<p>status : 401, type : forgotPassMessage, msg : Phone is not valid</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D010",            "description": "<p>status : 401, type : forgotPassMessage, msg : Verification Code expired</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D011",            "description": "<p>status : 401, type : forgotPassMessage, msg : Verification Code isn't correct</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D012",            "description": "<p>status : 401, type : forgotPassMessage, msg : Content not Complete - Missing phone or password in body</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D013",            "description": "<p>status : 401, type : forgotPassMessage, msg : No User Found</p>"          }        ]      }    }  },  {    "name": "Forgot_Password__add_verification_code_",    "group": "Users",    "type": "post",    "url": "/users/forgotpassword",    "title": "Forgot password (step 2)",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>phone of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "new_password",            "description": "<p>new password of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "verification",            "description": "<p>code from sms</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 Signup Successfully\n{ \n     type: 'forgotPassMessage',\n     message: 'Authentication succeeded' \n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "reqID",            "description": "<p>random text ( suggestion -&gt; String that encode with ‘hex’, length = 10 )</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "reqTime",            "description": "<p>Time.now()</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "A001",            "description": "<p>status : 401, msg : Req Invalid - Missing hashID or reqTime in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "A002",            "description": "<p>status : 401, msg : Req Expired - reqTime is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D009",            "description": "<p>status : 401, type : forgotPassMessage, msg : Phone is not valid</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D010",            "description": "<p>status : 401, type : forgotPassMessage, msg : Verification Code expired</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D011",            "description": "<p>status : 401, type : forgotPassMessage, msg : Verification Code isn't correct</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D012",            "description": "<p>status : 401, type : forgotPassMessage, msg : Content not Complete - Missing phone or password in body</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D013",            "description": "<p>status : 401, type : forgotPassMessage, msg : No User Found</p>"          }        ]      }    }  },  {    "name": "Login",    "group": "Users",    "type": "post",    "url": "/users/login",    "title": "User login",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>phone of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password of the User.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 Login Successfully (res.header.authorization)\n{ \n     **Decoded JWT**\n     payload = {\n         \"roles\": {\n             \"typeList\": [ //the list with ids that you can use\n                 \"admin\"\n             ],\n         \"admin\": {\n             \"stationID\": Number,\n             \"manager\": Boolean,\n             \"apiKey\": String,\n             \"secretKey\": String\n         } // ids' info will store in its own object\n     } \n }",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "reqID",            "description": "<p>random text ( suggestion -&gt; String that encode with ‘hex’, length = 10 )</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "reqTime",            "description": "<p>Time.now()</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "A001",            "description": "<p>status : 401, msg : Req Invalid - Missing hashID or reqTime in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "A002",            "description": "<p>status : 401, msg : Req Expired - reqTime is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D004",            "description": "<p>status : 401, type : loginMessage, msg : Content not Complete - Missing phone or password in body</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D005",            "description": "<p>status : 401, type : loginMessage, msg : No user found</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D006",            "description": "<p>status : 401, type : loginMessage, msg : Wrong password</p>"          }        ]      }    }  },  {    "name": "Logout",    "group": "Users",    "type": "post",    "url": "/users/logout",    "title": "logout",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 Signup Successfully\n{ \n     type: 'logoutMessage',\n     message: 'Logout succeeded' \n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "Others",            "description": "<p>Remember ‘jti’ and contact me</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B001",            "description": "<p>status : 401, msg : JWT or ApiKey undefined - Missing authorization or apikey in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B002",            "description": "<p>status : 401, msg : User not Found - apikey is wrong</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B003",            "description": "<p>status : 401, msg : User has logout - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B004",            "description": "<p>status : 401, msg : User has Banned - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B005",            "description": "<p>status : 401, msg : JWT Invalid - Wrong encoding of authorization or User has logined on other device</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B006",            "description": "<p>status : 401, msg : JWT Payload Invalid - Missing jti or iat or exp in authorization's payload</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B007",            "description": "<p>status : 401, msg : JWT Expired - iat or exp is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B008",            "description": "<p>status : 401, msg : Not Authorized for this URI - As msg says</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT string, encode using Secret key : // secretKey you get by login. Shouldn’t contain 'Bearer ’ in string</p> <p>JWT payload should contain:</p> <ul> <li>jti : random text ( suggestion -&gt; encode with ‘hex’, length = 10 )</li> <li>iat : Time.now();</li> <li>epx : Time.now(); plus 3 days</li> </ul>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "ApiKey",            "description": "<p>You can get ApiKey by signup or login</p>"          }        ]      }    }  },  {    "name": "ModifyPassword",    "group": "Users",    "permission": [      {        "name": "admin_clerk",        "title": "Admin/Clerk access rights needed.",        "description": "<p>Please use admin/clerk identity to request this uri.</p>"      }    ],    "type": "post",    "url": "/users/modifypassword",    "title": "Modify user's password",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "oripassword",            "description": "<p>original password of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "newpassword",            "description": "<p>new password of the user.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 Signup Successfully\n{ \n     type: 'chanPassMessage',\n     message: 'Change succeeded' \n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT string, encode using Secret key : // secretKey you get by login. Shouldn’t contain 'Bearer ’ in string</p> <p>JWT payload should contain:</p> <ul> <li>jti : random text ( suggestion -&gt; encode with ‘hex’, length = 10 )</li> <li>iat : Time.now();</li> <li>epx : Time.now(); plus 3 days</li> </ul>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "ApiKey",            "description": "<p>You can get ApiKey by signup or login</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B001",            "description": "<p>status : 401, msg : JWT or ApiKey undefined - Missing authorization or apikey in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B002",            "description": "<p>status : 401, msg : User not Found - apikey is wrong</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B003",            "description": "<p>status : 401, msg : User has logout - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B004",            "description": "<p>status : 401, msg : User has Banned - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B005",            "description": "<p>status : 401, msg : JWT Invalid - Wrong encoding of authorization or User has logined on other device</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B006",            "description": "<p>status : 401, msg : JWT Payload Invalid - Missing jti or iat or exp in authorization's payload</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B007",            "description": "<p>status : 401, msg : JWT Expired - iat or exp is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B008",            "description": "<p>status : 401, msg : Not Authorized for this URI - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D007",            "description": "<p>status : 401, type : chanPassMessage, msg : Content not Complete - Missing phone or password in body</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D008",            "description": "<p>status : 401, type : chanPassMessage, msg : Wrong password</p>"          }        ]      }    }  },  {    "name": "SignUp",    "group": "Users",    "permission": [      {        "name": "clerk",        "title": "Clerk access rights needed.",        "description": "<p>Please use clerk identity to request this uri.</p>"      }    ],    "type": "post",    "url": "/users/signup",    "title": "Sign up for new user (step 1)",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>phone of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password of the User.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 205 Need Verification Code\n{ \n     type: 'signupMessage',\n     message: 'Send Again With Verification Code' \n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "reqID",            "description": "<p>random text ( suggestion -&gt; String that encode with ‘hex’, length = 10 )</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "reqTime",            "description": "<p>Time.now()</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "A001",            "description": "<p>status : 401, msg : Req Invalid - Missing hashID or reqTime in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "A002",            "description": "<p>status : 401, msg : Req Expired - reqTime is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D001",            "description": "<p>status : 401, type : signupMessage, msg : Content not Complete - Missing phone or password in body</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D002",            "description": "<p>status : 401, type : signupMessage, msg : That phone is already taken - This phone has been register</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D003",            "description": "<p>status : 401, type : signupMessage, msg : Role structure invalid</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D009",            "description": "<p>status : 401, type : signupMessage, msg : Phone is not valid</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D010",            "description": "<p>status : 401, type : signupMessage, msg : Verification Code expired</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D011",            "description": "<p>status : 401, type : signupMessage, msg : Verification Code isn't correct</p>"          }        ]      }    }  },  {    "name": "SignUp_Clerk",    "group": "Users",    "permission": [      {        "name": "manager",        "title": "Manager access rights needed.",        "description": "<p>Please use manager identity to request this uri.</p>"      }    ],    "type": "post",    "url": "/users/signup/clerk",    "title": "Sign up for new clerk",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>phone of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password of the User.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 Signup Successfully\n{ \n     type: 'signupMessage',\n     message: 'Authentication succeeded' \n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT string, encode using Secret key : // secretKey you get by login. Shouldn’t contain 'Bearer ’ in string</p> <p>JWT payload should contain:</p> <ul> <li>jti : random text ( suggestion -&gt; encode with ‘hex’, length = 10 )</li> <li>iat : Time.now();</li> <li>epx : Time.now(); plus 3 days</li> </ul>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "ApiKey",            "description": "<p>You can get ApiKey by signup or login</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B001",            "description": "<p>status : 401, msg : JWT or ApiKey undefined - Missing authorization or apikey in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B002",            "description": "<p>status : 401, msg : User not Found - apikey is wrong</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B003",            "description": "<p>status : 401, msg : User has logout - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B004",            "description": "<p>status : 401, msg : User has Banned - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B005",            "description": "<p>status : 401, msg : JWT Invalid - Wrong encoding of authorization or User has logined on other device</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B006",            "description": "<p>status : 401, msg : JWT Payload Invalid - Missing jti or iat or exp in authorization's payload</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B007",            "description": "<p>status : 401, msg : JWT Expired - iat or exp is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B008",            "description": "<p>status : 401, msg : Not Authorized for this URI - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D001",            "description": "<p>status : 401, type : signupMessage, msg : Content not Complete - Missing phone or password in body</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D002",            "description": "<p>status : 401, type : signupMessage, msg : That phone is already taken - This phone has been register</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D003",            "description": "<p>status : 401, type : signupMessage, msg : Role structure invalid</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D009",            "description": "<p>status : 401, type : signupMessage, msg : Phone is not valid</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D010",            "description": "<p>status : 401, type : signupMessage, msg : Verification Code expired</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D011",            "description": "<p>status : 401, type : signupMessage, msg : Verification Code isn't correct</p>"          }        ]      }    }  },  {    "name": "SignUp_Root",    "group": "Users",    "permission": [      {        "name": "admin_clerk",        "title": "Admin/Clerk access rights needed.",        "description": "<p>Please use admin/clerk identity to request this uri.</p>"      }    ],    "type": "post",    "url": "/users/signup/root",    "title": "Sign up for customer from admin or clerk",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>phone of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password of the User.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 Signup Successfully\n{ \n     type: 'signupMessage',\n     message: 'Authentication succeeded' \n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT string, encode using Secret key : // secretKey you get by login. Shouldn’t contain 'Bearer ’ in string</p> <p>JWT payload should contain:</p> <ul> <li>jti : random text ( suggestion -&gt; encode with ‘hex’, length = 10 )</li> <li>iat : Time.now();</li> <li>epx : Time.now(); plus 3 days</li> </ul>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "ApiKey",            "description": "<p>You can get ApiKey by signup or login</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B001",            "description": "<p>status : 401, msg : JWT or ApiKey undefined - Missing authorization or apikey in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B002",            "description": "<p>status : 401, msg : User not Found - apikey is wrong</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B003",            "description": "<p>status : 401, msg : User has logout - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B004",            "description": "<p>status : 401, msg : User has Banned - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B005",            "description": "<p>status : 401, msg : JWT Invalid - Wrong encoding of authorization or User has logined on other device</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B006",            "description": "<p>status : 401, msg : JWT Payload Invalid - Missing jti or iat or exp in authorization's payload</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B007",            "description": "<p>status : 401, msg : JWT Expired - iat or exp is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B008",            "description": "<p>status : 401, msg : Not Authorized for this URI - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D001",            "description": "<p>status : 401, type : signupMessage, msg : Content not Complete - Missing phone or password in body</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D002",            "description": "<p>status : 401, type : signupMessage, msg : That phone is already taken - This phone has been register</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D003",            "description": "<p>status : 401, type : signupMessage, msg : Role structure invalid</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D009",            "description": "<p>status : 401, type : signupMessage, msg : Phone is not valid</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D010",            "description": "<p>status : 401, type : signupMessage, msg : Verification Code expired</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D011",            "description": "<p>status : 401, type : signupMessage, msg : Verification Code isn't correct</p>"          }        ]      }    }  },  {    "name": "SignUp__add_verification_code_",    "group": "Users",    "permission": [      {        "name": "clerk",        "title": "Clerk access rights needed.",        "description": "<p>Please use clerk identity to request this uri.</p>"      }    ],    "type": "post",    "url": "/users/signup",    "title": "Sign up for new user (step 2)",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>phone of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "verification",            "description": "<p>code from sms</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 Signup Successfully\n{ \n     type: 'signupMessage',\n     message: 'Authentication succeeded' \n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "reqID",            "description": "<p>random text ( suggestion -&gt; String that encode with ‘hex’, length = 10 )</p>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "reqTime",            "description": "<p>Time.now()</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "A001",            "description": "<p>status : 401, msg : Req Invalid - Missing hashID or reqTime in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "A002",            "description": "<p>status : 401, msg : Req Expired - reqTime is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D001",            "description": "<p>status : 401, type : signupMessage, msg : Content not Complete - Missing phone or password in body</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D002",            "description": "<p>status : 401, type : signupMessage, msg : That phone is already taken - This phone has been register</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D003",            "description": "<p>status : 401, type : signupMessage, msg : Role structure invalid</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D009",            "description": "<p>status : 401, type : signupMessage, msg : Phone is not valid</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D010",            "description": "<p>status : 401, type : signupMessage, msg : Verification Code expired</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D011",            "description": "<p>status : 401, type : signupMessage, msg : Verification Code isn't correct</p>"          }        ]      }    }  },  {    "name": "Subscribe_SNS_service",    "group": "Users",    "type": "post",    "url": "/users/subscribeSNS",    "title": "Subscribe SNS service",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "deviceToken",            "description": "<p>Token of the device.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "appType",            "description": "<p>customer or shop.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "system",            "description": "<p>The system what the user use (ios | android).</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 \n{ \n     type: 'subscribeMessage',\n     message: 'Subscribe succeeded',\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>A JWT string, encode using Secret key : // secretKey you get by login. Shouldn’t contain 'Bearer ’ in string</p> <p>JWT payload should contain:</p> <ul> <li>jti : random text ( suggestion -&gt; encode with ‘hex’, length = 10 )</li> <li>iat : Time.now();</li> <li>epx : Time.now(); plus 3 days</li> </ul>"          },          {            "group": "Header",            "type": "String",            "optional": false,            "field": "ApiKey",            "description": "<p>You can get ApiKey by signup or login</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B001",            "description": "<p>status : 401, msg : JWT or ApiKey undefined - Missing authorization or apikey in headers</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B002",            "description": "<p>status : 401, msg : User not Found - apikey is wrong</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B003",            "description": "<p>status : 401, msg : User has logout - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B004",            "description": "<p>status : 401, msg : User has Banned - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B005",            "description": "<p>status : 401, msg : JWT Invalid - Wrong encoding of authorization or User has logined on other device</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B006",            "description": "<p>status : 401, msg : JWT Payload Invalid - Missing jti or iat or exp in authorization's payload</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B007",            "description": "<p>status : 401, msg : JWT Expired - iat or exp is not acceptable</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "B008",            "description": "<p>status : 401, msg : Not Authorized for this URI - As msg says</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D009",            "description": "<p>status : 401, type : subscribeMessage, msg : Content not Complete</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "D010",            "description": "<p>status : 401, type : subscribeMessage, msg : Content invalid - appType or sysyem is wrong</p>"          }        ]      }    }  },  {    "version": "0.0.1",    "type": "",    "url": "",    "filename": "routes/users.js",    "group": "_Users_peterting_Documents_GoodToGo_Backend_routes_users_js",    "groupTitle": "_Users_peterting_Documents_GoodToGo_Backend_routes_users_js",    "name": ""  }] });
